function fitResult=distortFit(pointGT,pointDistort,camHeight,camWidth)
% Function to fit the ground truth points with distorted point
% Input: matched pairs of the ground truth and distorted points, 
% Input: camera size (height and width)
% Output: fitting coefficients k1,k2
% Move the image to the center of the coordinate
x_distort=pointDistort(:,1)/2-camWidth/4;
y_distort=pointDistort(:,2)/2-camHeight/4;
x_gt=pointGT(:,1)/2-camWidth/4;
y_gt=pointGT(:,2)/2-camHeight/4;
figure;subplot(121);
plot(x_distort,y_distort,'r*');hold on;
plot(x_gt,y_gt,'b*');pbaspect([1 1 1])
axis([500 1500 0 1000]);
set(gca,'fontsize',16,'FontWeight','bold','LineWidth',2,'GridLineStyle','--','FontName','Arial')
legend('Distorted points','Ground truth','location','northwest');
xlabel('x axis (pixels)');ylabel('y axis (pixels)');
% Fitting
[fitResult, ~] = createFit(x_gt, y_gt, x_distort); 
%[fitresult_y, ~] = createFit(y_gt, x_gt, y_distort);
%
x_distortFix=x_gt.*(1+fitResult.a.*(x_gt.^2+y_gt.^2)+fitResult.b.*(x_gt.^2+y_gt.^2).^2);
y_distortFix=y_gt.*(1+fitResult.a.*(x_gt.^2+y_gt.^2)+fitResult.b.*(x_gt.^2+y_gt.^2).^2);
subplot(122);
plot(x_distort,y_distort,'r*');hold on;
plot(x_distortFix,y_distortFix,'b*');pbaspect([1 1 1])
axis([500 1500 0 1000]);
set(gca,'fontsize',16,'FontWeight','bold','LineWidth',2,'GridLineStyle','--','FontName','Arial')
legend('Distorted points','fitting points','location','northwest');
xlabel('x axis (pixels)');ylabel('y axis (pixels)');
end




function [fitresult, gof] = createFit(x_gt, y_gt, x_distort)
%CREATEFIT(X_GT,Y_GT,X_DISTORT)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : x_gt
%      Y Input : y_gt
%      Z Output: x_distort
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Oct-2019 16:02:21
%% Fit: 'untitled fit 1'.
[xData, yData, zData] = prepareSurfaceData( x_gt, y_gt, x_distort );

% Set up fittype and options.
ft = fittype( 'x*(1+a*(x^2+y^2)+b*(x^2+y^2)^2)', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.225459240690228 0.131246784568457];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );
end